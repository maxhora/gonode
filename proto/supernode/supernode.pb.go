// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: supernode/supernode.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterArtworkReply_Error_Status int32

const (
	RegisterArtworkReply_Error_OK  RegisterArtworkReply_Error_Status = 0
	RegisterArtworkReply_Error_ERR RegisterArtworkReply_Error_Status = 1
)

// Enum value maps for RegisterArtworkReply_Error_Status.
var (
	RegisterArtworkReply_Error_Status_name = map[int32]string{
		0: "OK",
		1: "ERR",
	}
	RegisterArtworkReply_Error_Status_value = map[string]int32{
		"OK":  0,
		"ERR": 1,
	}
)

func (x RegisterArtworkReply_Error_Status) Enum() *RegisterArtworkReply_Error_Status {
	p := new(RegisterArtworkReply_Error_Status)
	*p = x
	return p
}

func (x RegisterArtworkReply_Error_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterArtworkReply_Error_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_supernode_supernode_proto_enumTypes[0].Descriptor()
}

func (RegisterArtworkReply_Error_Status) Type() protoreflect.EnumType {
	return &file_supernode_supernode_proto_enumTypes[0]
}

func (x RegisterArtworkReply_Error_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterArtworkReply_Error_Status.Descriptor instead.
func (RegisterArtworkReply_Error_Status) EnumDescriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{1, 0, 0}
}

type RegisterArtworkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Requests:
	//	*RegisterArtworkRequest_Handshake
	Requests isRegisterArtworkRequest_Requests `protobuf_oneof:"requests"`
}

func (x *RegisterArtworkRequest) Reset() {
	*x = RegisterArtworkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supernode_supernode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArtworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArtworkRequest) ProtoMessage() {}

func (x *RegisterArtworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_supernode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArtworkRequest.ProtoReflect.Descriptor instead.
func (*RegisterArtworkRequest) Descriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{0}
}

func (m *RegisterArtworkRequest) GetRequests() isRegisterArtworkRequest_Requests {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (x *RegisterArtworkRequest) GetHandshake() *RegisterArtworkRequest_HandshakeRequest {
	if x, ok := x.GetRequests().(*RegisterArtworkRequest_Handshake); ok {
		return x.Handshake
	}
	return nil
}

type isRegisterArtworkRequest_Requests interface {
	isRegisterArtworkRequest_Requests()
}

type RegisterArtworkRequest_Handshake struct {
	Handshake *RegisterArtworkRequest_HandshakeRequest `protobuf:"bytes,1,opt,name=handshake,proto3,oneof"`
}

func (*RegisterArtworkRequest_Handshake) isRegisterArtworkRequest_Requests() {}

type RegisterArtworkReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Replies:
	//	*RegisterArtworkReply_Handshake
	Replies isRegisterArtworkReply_Replies `protobuf_oneof:"replies"`
}

func (x *RegisterArtworkReply) Reset() {
	*x = RegisterArtworkReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supernode_supernode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArtworkReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArtworkReply) ProtoMessage() {}

func (x *RegisterArtworkReply) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_supernode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArtworkReply.ProtoReflect.Descriptor instead.
func (*RegisterArtworkReply) Descriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{1}
}

func (m *RegisterArtworkReply) GetReplies() isRegisterArtworkReply_Replies {
	if m != nil {
		return m.Replies
	}
	return nil
}

func (x *RegisterArtworkReply) GetHandshake() *RegisterArtworkReply_HandshakeReply {
	if x, ok := x.GetReplies().(*RegisterArtworkReply_Handshake); ok {
		return x.Handshake
	}
	return nil
}

type isRegisterArtworkReply_Replies interface {
	isRegisterArtworkReply_Replies()
}

type RegisterArtworkReply_Handshake struct {
	Handshake *RegisterArtworkReply_HandshakeReply `protobuf:"bytes,1,opt,name=handshake,proto3,oneof"`
}

func (*RegisterArtworkReply_Handshake) isRegisterArtworkReply_Replies() {}

type RegisterArtworkRequest_HandshakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnID  string `protobuf:"bytes,1,opt,name=connID,proto3" json:"connID,omitempty"`
	NodeKey string `protobuf:"bytes,2,opt,name=node_key,json=nodeKey,proto3" json:"node_key,omitempty"`
}

func (x *RegisterArtworkRequest_HandshakeRequest) Reset() {
	*x = RegisterArtworkRequest_HandshakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supernode_supernode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArtworkRequest_HandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArtworkRequest_HandshakeRequest) ProtoMessage() {}

func (x *RegisterArtworkRequest_HandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_supernode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArtworkRequest_HandshakeRequest.ProtoReflect.Descriptor instead.
func (*RegisterArtworkRequest_HandshakeRequest) Descriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RegisterArtworkRequest_HandshakeRequest) GetConnID() string {
	if x != nil {
		return x.ConnID
	}
	return ""
}

func (x *RegisterArtworkRequest_HandshakeRequest) GetNodeKey() string {
	if x != nil {
		return x.NodeKey
	}
	return ""
}

type RegisterArtworkReply_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RegisterArtworkReply_Error_Status `protobuf:"varint,1,opt,name=status,proto3,enum=supernode.RegisterArtworkReply_Error_Status" json:"status,omitempty"`
	ErrMsg string                            `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RegisterArtworkReply_Error) Reset() {
	*x = RegisterArtworkReply_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supernode_supernode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArtworkReply_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArtworkReply_Error) ProtoMessage() {}

func (x *RegisterArtworkReply_Error) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_supernode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArtworkReply_Error.ProtoReflect.Descriptor instead.
func (*RegisterArtworkReply_Error) Descriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{1, 0}
}

func (x *RegisterArtworkReply_Error) GetStatus() RegisterArtworkReply_Error_Status {
	if x != nil {
		return x.Status
	}
	return RegisterArtworkReply_Error_OK
}

func (x *RegisterArtworkReply_Error) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type RegisterArtworkReply_HandshakeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *RegisterArtworkReply_Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RegisterArtworkReply_HandshakeReply) Reset() {
	*x = RegisterArtworkReply_HandshakeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_supernode_supernode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterArtworkReply_HandshakeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterArtworkReply_HandshakeReply) ProtoMessage() {}

func (x *RegisterArtworkReply_HandshakeReply) ProtoReflect() protoreflect.Message {
	mi := &file_supernode_supernode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterArtworkReply_HandshakeReply.ProtoReflect.Descriptor instead.
func (*RegisterArtworkReply_HandshakeReply) Descriptor() ([]byte, []int) {
	return file_supernode_supernode_proto_rawDescGZIP(), []int{1, 1}
}

func (x *RegisterArtworkReply_HandshakeReply) GetError() *RegisterArtworkReply_Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_supernode_supernode_proto protoreflect.FileDescriptor

var file_supernode_supernode_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x75, 0x70,
	0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x52, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x1a, 0x45, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49,
	0x44, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4e, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x1a, 0x80, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x19, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x45,
	0x52, 0x52, 0x10, 0x01, 0x1a, 0x4d, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x32, 0x66,
	0x0a, 0x09, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x6f, 0x77, 0x72, 0x6b, 0x12, 0x21,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x28, 0x01, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x73, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x67, 0x6f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_supernode_supernode_proto_rawDescOnce sync.Once
	file_supernode_supernode_proto_rawDescData = file_supernode_supernode_proto_rawDesc
)

func file_supernode_supernode_proto_rawDescGZIP() []byte {
	file_supernode_supernode_proto_rawDescOnce.Do(func() {
		file_supernode_supernode_proto_rawDescData = protoimpl.X.CompressGZIP(file_supernode_supernode_proto_rawDescData)
	})
	return file_supernode_supernode_proto_rawDescData
}

var file_supernode_supernode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_supernode_supernode_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_supernode_supernode_proto_goTypes = []interface{}{
	(RegisterArtworkReply_Error_Status)(0),          // 0: supernode.RegisterArtworkReply.Error.Status
	(*RegisterArtworkRequest)(nil),                  // 1: supernode.RegisterArtworkRequest
	(*RegisterArtworkReply)(nil),                    // 2: supernode.RegisterArtworkReply
	(*RegisterArtworkRequest_HandshakeRequest)(nil), // 3: supernode.RegisterArtworkRequest.HandshakeRequest
	(*RegisterArtworkReply_Error)(nil),              // 4: supernode.RegisterArtworkReply.Error
	(*RegisterArtworkReply_HandshakeReply)(nil),     // 5: supernode.RegisterArtworkReply.HandshakeReply
}
var file_supernode_supernode_proto_depIdxs = []int32{
	3, // 0: supernode.RegisterArtworkRequest.handshake:type_name -> supernode.RegisterArtworkRequest.HandshakeRequest
	5, // 1: supernode.RegisterArtworkReply.handshake:type_name -> supernode.RegisterArtworkReply.HandshakeReply
	0, // 2: supernode.RegisterArtworkReply.Error.status:type_name -> supernode.RegisterArtworkReply.Error.Status
	4, // 3: supernode.RegisterArtworkReply.HandshakeReply.error:type_name -> supernode.RegisterArtworkReply.Error
	1, // 4: supernode.SuperNode.RegisterArtowrk:input_type -> supernode.RegisterArtworkRequest
	2, // 5: supernode.SuperNode.RegisterArtowrk:output_type -> supernode.RegisterArtworkReply
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_supernode_supernode_proto_init() }
func file_supernode_supernode_proto_init() {
	if File_supernode_supernode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_supernode_supernode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArtworkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supernode_supernode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArtworkReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supernode_supernode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArtworkRequest_HandshakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supernode_supernode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArtworkReply_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_supernode_supernode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterArtworkReply_HandshakeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_supernode_supernode_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RegisterArtworkRequest_Handshake)(nil),
	}
	file_supernode_supernode_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RegisterArtworkReply_Handshake)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_supernode_supernode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_supernode_supernode_proto_goTypes,
		DependencyIndexes: file_supernode_supernode_proto_depIdxs,
		EnumInfos:         file_supernode_supernode_proto_enumTypes,
		MessageInfos:      file_supernode_supernode_proto_msgTypes,
	}.Build()
	File_supernode_supernode_proto = out.File
	file_supernode_supernode_proto_rawDesc = nil
	file_supernode_supernode_proto_goTypes = nil
	file_supernode_supernode_proto_depIdxs = nil
}
